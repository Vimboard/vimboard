<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.github.vimboard.mapper.SchemaMapper">

    <update id="create" parameterType="String">

        CREATE SCHEMA vmb;



        ----------------------------------------------------------------------
        -- TABLES
        ----------------------------------------------------------------------

        CREATE TABLE vmb.boards (
            uri         varchar(58) NOT NULL,
            title       text NOT NULL,
            subtitle    text,
            PRIMARY KEY(uri)
        );
        CREATE INDEX ON vmb.boards(uri);

        ----------------------------------------------------------------------

--         CREATE TABLE vmb.cites (
--             board           int NOT NULL,
--             post            bigint NOT NULL,
--             target_board    int NOT NULL,
--             target_post     bigint NOT NULL,
--             UNIQUE(boards, post, target_board, target_post)
--         );
--         CREATE INDEX ON vmb.cites(board, post);
--         CREATE INDEX ON vmb.cites(target_board, target_post);

        ----------------------------------------------------------------------

        CREATE TABLE vmb.modlogs (
            mod      integer NOT NULL,
            ip       varchar(39) NOT NULL,
            board    varchar(58) DEFAULT NULL,
            time     timestamp NOT NULL,
            text     text NOT NULL
        );
        CREATE INDEX ON vmb.modlogs(mod);
        CREATE INDEX ON vmb.modlogs(time);

        ----------------------------------------------------------------------

        CREATE TABLE vmb.mods (
            id          serial NOT NULL,
            username    varchar(100) NOT NULL,
            password    varchar(1000) NOT NULL,
            type        smallint NOT NULL,
            boards      text NOT NULL,
            PRIMARY KEY(id),
            UNIQUE(username)
        );

        ----------------------------------------------------------------------

        CREATE TABLE vmb.noticeboard (
            id         bigserial NOT NULL,
            mod        int NOT NULL,
            time       timestamp NOT NULL,
            subject    text NOT NULL,
            body       text NOT NULL,
            PRIMARY KEY(id)
        );
        CREATE INDEX ON vmb.noticeboard(time);

        ----------------------------------------------------------------------

        CREATE TABLE vmb.pms (
            id         bigserial NOT NULL,
            sender     int NOT NULL,
            "to"       int NOT NULL,
            message    text NOT NULL,
            time       timestamp NOT NULL,
            unread     boolean NOT NULL,
            PRIMARY KEY (id)
        );
        CREATE INDEX ON vmb.pms("to", unread);

        ----------------------------------------------------------------------

--         CREATE TABLE vmb.posts (
--             board            int NOT NULL,
--             id               bigint NOT NULL, --
--             thread           bigint DEFAULT NULL,
--             subject          varchar(100) DEFAULT NULL,
--             email            varchar(30) DEFAULT NULL,
--             name             varchar(35) DEFAULT NULL,
--             trip             varchar(15) DEFAULT NULL,
--             capcode          varchar(50) DEFAULT NULL,
--             body             text NOT NULL,
--             body_nomarkup    text,
--             time             bigint NOT NULL,
--             bump             bigint DEFAULT NULL,
--             files            text DEFAULT NULL,
--             num_files        smallint DEFAULT 0,
--             filehash         text,
--             password         varchar(20) DEFAULT NULL,
--             ip               varchar(39) NOT NULL,
--             sticky           boolean NOT NULL,
--             locked           boolean NOT NULL,
--             cycle            boolean NOT NULL,
--             sage             boolean NOT NULL,
--             embed            text,
--             slug             varchar(256) DEFAULT NULL
--         ) PARTITION BY LIST(boards);

        ----------------------------------------------------------------------

        CREATE TABLE vmb.reports (
            id               bigserial NOT NULL,
            time             timestamp NOT NULL,
            ip               varchar(39) NOT NULL,
            board            varchar(58) DEFAULT NULL,
            post             bigint NOT NULL,
            reason           text NOT NULL,
            PRIMARY KEY (id)
        );

        ----------------------------------------------------------------------

--         CREATE TABLE vmb.resource (
--             board       int NOT NULL,
--             post        bigint NOT NULL,
--             filename    varchar(20) NOT NULL,
--             UNIQUE(boards, post, filename)
--         );
--         CREATE INDEX ON vmb.resource(board, post);
--         CREATE INDEX ON vmb.resource(filename);

        ----------------------------------------------------------------------

        CREATE TABLE vmb.version (
            version    varchar(20) NOT NULL,
            UNIQUE(version)
        );
        INSERT INTO vmb.version (version) VALUES (#{version});

    </update>

    <!--<sql id="createPostPartition">
        CREATE TABLE vmb.post_#{id} PARTITION OF vmb.post (
            UNIQUE (board, id)
        ) FOR VALUES IN (#{id});


        CREATE INDEX ON vmb.post_#{id} (thread, id);
        CREATE INDEX ON vmb.post_#{id} (filehash(40));
        CREATE INDEX ON vmb.post_#{id} (time);
        CREATE INDEX ON vmb.post_#{id} (ip);
        CREATE INDEX ON vmb.post_#{id} (thread, sticky, bump);
    </sql>-->

    <update id="drop">
        DROP SCHEMA IF EXISTS vmb CASCADE;
    </update>

    <select id="version" resultMap="versionResult">
        SELECT version AS schema_version,
               version() AS server_version
        FROM vmb.version
        LIMIT 1
    </select>

    <resultMap id="versionResult"
               type="com.github.vimboard.domain.DBVersion">
        <result property="schemaVersion" column="schema_version"/>
        <result property="serverVersion" column="server_version"/>
    </resultMap>

</mapper>
